#!/usr/bin/env ruby

def setup
  log 'Installing gems'
  # Only do bundle install if the much-faster
  # bundle check indicates we need to
  system! 'bundle check || bundle install'

  log 'Dropping & recreating the development database'
  # Note that the very first time this runs, db:reset
  # will fail, but this failure is fixed by
  # doing a db:migrate
  system! 'bin/rails db:reset || bin/rails db:migrate'

  log 'Dropping & recreating the test database'
  # Setting the RAILS_ENV explicitly to be sure
  # we actually reset the test database
  system!({ 'RAILS_ENV' => 'test' }, 'bin/rails db:reset')

  log 'All set up.'
end

# It's helpful to know what messages came from this
# script, so we'll use log instead of `puts`
def log(message)
  puts "[ bin/setup ] #{message}"
end

# We don't want the setup method to have to do all this error
# checking, and we also want to explicitly log what we are
# executing. Thus, we use this method instead of Kernel#system
def system!(*args)
  log "Executing #{args}"
  if system(*args)
    log "#{args} succeeded"
  else
    log "#{args} failed"
    abort
  end
end

setup
